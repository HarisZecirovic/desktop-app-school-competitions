// <auto-generated />
using System;
using EntityFramework.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework.Data.Migrations
{
    [DbContext(typeof(TakmicenjeDbContext))]
    [Migration("20220103164819_Migracija")]
    partial class Migracija
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("EntityFramework.Domain.Beleska", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImeTimaUcenika")
                        .HasColumnType("TEXT");

                    b.Property<string>("TesktBeleske")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNameUcenika")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Beleske");
                });

            modelBuilder.Entity("EntityFramework.Domain.Clanovi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dozvola")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImeSkole")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImeTimaUcenika")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimImeTima")
                        .HasColumnType("TEXT");

                    b.Property<int>("UcenikId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserNameUcenika")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TimImeTima");

                    b.HasIndex("UcenikId");

                    b.ToTable("Clanovi");
                });

            modelBuilder.Entity("EntityFramework.Domain.PrijavaZaTakmicenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ime_Tima")
                        .HasColumnType("TEXT");

                    b.Property<string>("NazivSkole")
                        .HasColumnType("TEXT");

                    b.Property<string>("Razred")
                        .HasColumnType("TEXT");

                    b.Property<int>("TakmicenjeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TakmicenjeId");

                    b.ToTable("PrijaveZaTakmicenje");
                });

            modelBuilder.Entity("EntityFramework.Domain.RasporedSedenja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrojKlupe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrojZadnjeKlupe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTakmicenja")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImeTima")
                        .HasColumnType("TEXT");

                    b.Property<string>("NazivSkole")
                        .HasColumnType("TEXT");

                    b.Property<int>("PrijavaZaTakmicenjeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserNameUcenika")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PrijavaZaTakmicenjeId");

                    b.ToTable("RasporediSedenja");
                });

            modelBuilder.Entity("EntityFramework.Domain.Rezultati", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bodovi")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdTakmicenja")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImeUcenika")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrezimeUcenika")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNameUcenika")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rezultati");
                });

            modelBuilder.Entity("EntityFramework.Domain.Skola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NazivSkole")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNameSkole")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Skola");
                });

            modelBuilder.Entity("EntityFramework.Domain.Takmicenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatumTakmicenja")
                        .HasColumnType("TEXT");

                    b.Property<string>("DozvolaZaPrijavu")
                        .HasColumnType("TEXT");

                    b.Property<string>("NazivTakmicenja")
                        .HasColumnType("TEXT");

                    b.Property<string>("RazredTakmicenja")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RokZaPrijavu")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusTakmicenja")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Takmicenja");
                });

            modelBuilder.Entity("EntityFramework.Domain.Tim", b =>
                {
                    b.Property<string>("ImeTima")
                        .HasColumnType("TEXT");

                    b.Property<string>("Razred")
                        .HasColumnType("TEXT");

                    b.Property<int>("SkolaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ImeTima");

                    b.HasIndex("SkolaId");

                    b.ToTable("Timovi");
                });

            modelBuilder.Entity("EntityFramework.Domain.Ucenik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("TEXT");

                    b.Property<string>("Jmbg")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pol")
                        .HasColumnType("TEXT");

                    b.Property<string>("Razred")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNameUcenika")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Ucenici");
                });

            modelBuilder.Entity("EntityFramework.Domain.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dozvola")
                        .HasColumnType("TEXT");

                    b.Property<string>("Drzava")
                        .HasColumnType("TEXT");

                    b.Property<string>("ElPosta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lozinka")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mesto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prezime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tip")
                        .HasColumnType("TEXT");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EntityFramework.Domain.Clanovi", b =>
                {
                    b.HasOne("EntityFramework.Domain.Tim", "Tim")
                        .WithMany("Clanovi")
                        .HasForeignKey("TimImeTima");

                    b.HasOne("EntityFramework.Domain.Ucenik", "Ucenik")
                        .WithMany()
                        .HasForeignKey("UcenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tim");

                    b.Navigation("Ucenik");
                });

            modelBuilder.Entity("EntityFramework.Domain.PrijavaZaTakmicenje", b =>
                {
                    b.HasOne("EntityFramework.Domain.Takmicenje", "Takmicenje")
                        .WithMany()
                        .HasForeignKey("TakmicenjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Takmicenje");
                });

            modelBuilder.Entity("EntityFramework.Domain.RasporedSedenja", b =>
                {
                    b.HasOne("EntityFramework.Domain.PrijavaZaTakmicenje", "PrijavaZaTakmicenje")
                        .WithMany()
                        .HasForeignKey("PrijavaZaTakmicenjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrijavaZaTakmicenje");
                });

            modelBuilder.Entity("EntityFramework.Domain.Skola", b =>
                {
                    b.HasOne("EntityFramework.Domain.User", "User")
                        .WithMany("Skola")
                        .HasForeignKey("UserName");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EntityFramework.Domain.Tim", b =>
                {
                    b.HasOne("EntityFramework.Domain.Skola", "Skola")
                        .WithMany()
                        .HasForeignKey("SkolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skola");
                });

            modelBuilder.Entity("EntityFramework.Domain.Ucenik", b =>
                {
                    b.HasOne("EntityFramework.Domain.User", "User")
                        .WithMany("Ucenici")
                        .HasForeignKey("UserName");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EntityFramework.Domain.Tim", b =>
                {
                    b.Navigation("Clanovi");
                });

            modelBuilder.Entity("EntityFramework.Domain.User", b =>
                {
                    b.Navigation("Skola");

                    b.Navigation("Ucenici");
                });
#pragma warning restore 612, 618
        }
    }
}
